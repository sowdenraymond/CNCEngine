#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    # Enable caching
    proxy_cache_path C:/temp levels=1:2 keys_zone=jde-cache:10m max_size=10g inactive=60m use_temp_path=off;
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    # Hide nginx version information.
    server_tokens off;

    # Specify MIME types for files.
    include       mime.types;
    default_type  application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

    # load balancer
    upstream 10.10.32.151 {
    ip_hash;
    server 10.10.32.151:9184;
    }

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    keepalive_timeout 120s;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    # For performance reasons, on FreeBSD systems w/ ZFS
    # this option should be disabled as ZFS's ARC caches
    # frequently used files in RAM by default.
    sendfile        on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    tcp_nopush      on;

    # Enable gzip compression.
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
      application/atom+xml
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      image/png
      image/gif
      image/jpeg
      text/cache-manifest
      text/css
      text/plain
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy
      text/javascript;
    # text/html is always compressed by gzip module

    server {
        listen       80;
        #server_name  JDEWEB01;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
 
        # catch and proxy all requests to /jde to backend server
        location /jde {
            include proxy.conf;
            proxy_pass http://10.10.32.151/jde;
            proxy_pass_header Server;
            proxy_cache jde-cache;
            proxy_cache_valid 200 302 60m;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
        }
     
        # redirect / to /jde
        location = / {
            return 302 /jde/;
        }

        location ~ ^/share/((images/|css/|js/).*)$ {
            root C:/Oracle/Middleware/Oracle_Home/user_projects/domains/E1_Apps/servers/JDEWEB01_HTML_PD/stage/JDEWEB01_HTML_PD/app/webclient.war/share/$1;
            access_log off;
            proxy_cache jde-cache;
            expires max;
        }

        location ~ ^/img/((alta/|favourite/|freestlye/|res/).*)$ {
            root C:/Oracle/Middleware/Oracle_Home/user_projects/domains/E1_Apps/servers/JDEWEB01_HTML_PD/stage/JDEWEB01_HTML_PD/app/webclient.war/img/$1;
            access_log off;
            proxy_cache jde-cache;
            expires max;
        }

        location ~ ^/css/((freestyle/).*)$ {
            root C:/Oracle/Middleware/Oracle_Home/user_projects/domains/E1_Apps/servers/JDEWEB01_HTML_PD/stage/JDEWEB01_HTML_PD/app/webclient.war/css/$1;
            access_log off;
            proxy_cache jde-cache;
            expires max;
        }

        location ~ ^/js/((ckeditor/|freestlye/|JQuery/|JSUnit/|KnockOut/).*)$ {
            root C:/Oracle/Middleware/Oracle_Home/user_projects/domains/E1_Apps/servers/JDEWEB01_HTML_PD/stage/JDEWEB01_HTML_PD/app/webclient.war/js/$1;
            access_log off;
            proxy_cache jde-cache;
            expires max;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
